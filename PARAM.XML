<commandList name="FLexible Exasclae Kinetic Simulator: PC component">

  <command name="SAVEPLOT">
    <parameter name="nPlotFile" type="integer" min="0" max="15" default="0" />
    <for name="iPlot" from="1" to="$nPlotFile">
      <parameter name="StringPlot" type="strings" min="4" max="5">
	<part name="plotarea" type="string" input="select"
	      required="T">
	  <option name="3D" value="3d"/>
	  <option name="cut" value="cut"/>	  
	  <option name="x=" />
	  <option name="y=" />
	  <option name="z=" />
	</part>
	<part name="plotvar" type="string" required="T"
	      input="select">
	  <option name="MHD variables"    value="fluid" />
	  <option name="Set vars" value="var"/>
	  <option name="Particles" value="particles"/>
	</part>
	<part name="plotform" type="string" input="select"
	      required="T">
	  <option value="amrex" name="AMReX built-in format"/>
	  <option value="real4" name="IDL single prec"/>
	  <option value="real8" name="IDL double prec"/>
	  <option value="ascii" name="IDL ascii"/>
	</part>
	<part name="compactplot" type="string" input="select"
	      required="F"
	      if="$plotform !~ /amrex/" > 
	</part>
	
      </parameter>
      <parameter name="DnSavePlot" type="integer" min="-1"
		 default="-1"/>
      <parameter name="DtSavePlot" type="real"    min="-1"
		 default="-1.0"/>
      <if expr="$plotarea =~ /\bdpl|cut|slc\b/">
	<parameter name="xMinCut" type="real" />
	<parameter name="xMaxCut" type="real" min="$xMinCut"/>
	<parameter name="yMinCut" type="real" />
	<parameter name="yMaxCut" type="real" min="$yMinCut"/>
	<parameter name="zMinCut" type="real" />
	<parameter name="zMaxCut" type="real" min="$zMinCut"/>
      </if>
      <parameter name="DxSavePlot" type="real" min="-1.0" default="-1.0" />
      <if expr="$plotvar =~ /\bvar\b/i">
	<parameter name="NameVars" type="string" length="200"/>
      </if>
    </for>
    
#SAVEPLOT                                                                         
6                                 nPlot
z=0 var real4 planet              plotString                                      
-1                                dn                                              
20                                dt                                              
1                                 dx                                              
{fluid} numS0                     varName                                         
y=0 fluid real4 pic               plotString                                      
-100                              dn                                              
5                                 dt                                              
-1                                dx                                              
3d var amrex planet               plotString                                      
-1                                dn                                              
10                                dt                                              
1                                 dx                                              
{fluid} numS0                     varName                                         
3d fluid real4 planet compact     plotString                                      
-1                                dn                                              
10                                dt                                              
1                                 dx                                              
cut fluid real8 si                plotString                                      
-1                                dn                                              
100                               dt                                              
5                                 xMin                                            
10                                xMax                                            
-2                                yMin                                            
2                                 yMax                                            
-2                                zMin                                            
2                                 zMax                                            
1                                 dx                                              
3d particles0 amrex planet        plotString                                      
-1                                dn                                              
200                               dt                                              
1                                 dx   

This command determines the IDL type output from FLEKS.

The first parameter is nPlotFile, which is the number of files to be saved.
Each output starts with StringPlot, which specify the output region, variables,
file format and variable units. The plotting frequencies DnOutput and DtOutput
are following. DnOutput is needed and it only works for particles and '3d' type
field output. Only one of every DnOutput nodes/particles are saved in order
to save disk space, also to speed out the post processing and virtualization.
Several other parameters may follow based on the content of StringPlot.

StringPlot has the format:'domain variables format unit'.
'domain' can be one of the following: \begin{verbatim} x=x0     - a 2D cut of x=x0 plane. 'x0' is the coordinate. y=y0     - a 2D cut of y=y0 plane. 'y0' is the coordinate. z=z0     - a 2D cut of z=z0 plane. 'z0' is the coordinate.
3d       - the whole computational domain.
1d       - the whole computational domain. It is essentially the same as '3d'.
cut      - part of the 3D domain. Need to specifiy the output range.
sat_SatelliteFile  - save information along the satellite trajectory read from SatelliteFile.
\end{verbatim}
The value of 'variables' could be:
\begin{verbatim}
all                                 - all the PIC field variables of the first two species:
   'qS0 qS1 Bx By Bz Ex Ey Ez kXXS0 kYYS0 kZZS0 kXYS0 kXZS0 kYZS0 kXXS1 kYYS1 kZZS1 kXYS1 kXZS1 kYZS1 jxS0 jyS0 jzS0 jxS1 jyS1 jzS1'
fluid                               - all the FLUID field variables of the first two species:
   'rhoS0 rhoS1 Bx By Bz Ex Ey Ez uxS0 uyS0 uzS0 uxS1 uyS1 uzS1 pS0 pS1 pXXS0 pYYS0 pZZS0 pXYS0 pXZS0 pYZS0 pXXS1 pYYS1 pZZS1 pXYS1 pXZS1 pYZS1'
var                                 - read from parameter file
particles0/particles1/particles2... - the location, velocity and weight of particles belonging to species0, species1, ... 
   The particle species needs to be specified. One and only one species is allowd in one output file. 
\end{verbatim}

qS0 and qS1 are charge densities, while rhos0 and rhos1 are mass densities.
kXXS0 = sum(vx*vx), where vx is the particle velocity. So kXXS0 includes the
effect of bulk velocity. But pXXS0 is true pressure that excludes
the influence of the bulk velocity.

The file format could be either 'real4' or 'ascii'. The 'unit' can be:
\begin{verbatim}
PIC       - normalized PIC unit.
SI        - SI unit. The unit of current and electric field are not well defined. 
PLANETARY - planetary unit. B field is in nT, velocity is in km/s,
length is in planet radius, density is in amu/cm^3, pressure is in nPa.
Current and electric field units are not well defined.

Note:
1) Available output variables are listed in EMfields3D.cpp::getVar().
2) DxOutput is only functional for particles and 3d field output now.
3) The position for "cut", "x=", "y="... is in BATSRUS coordinate.
4) Output variable 'particles' only works for 'cut', '3d' and 'sat'.
5) The unit of current and electric field are not well defined so far.
\end{verbatim}

No plot file is saved by default.
</command>

<command name="PERIODICITY">
  <parameter name="isPeriodicX" type="logical" default="F" />
  <parameter name="isPeriodicY" type="logical" default="F" />
  <parameter name="isPeriodicZ" type="logical" default="F" />
  
#PERIODICITY
F                 isPeriodicX
F                 isPeriodicY
F                 isPeriodicZ

We may want to use periodic boundary conditions in some directions even in
a coupled simulation, and the command above can be used. Note that if there
is only one cell in one direction, periodic boundary conditions will be used
in this direction and the parameter above will be ignored. Otherwise
the default value is false.
</command>

<command name="EFIELDSOLVER">
  <parameter name="EFieldTol" type="real" default="1e-6"/>
  <parameter name="EFieldIter" type="integer" default="200"/>
  
#EFIELDSOLVER
1e-6                     EFieldTol
200                      EFieldIter

The tolerance and the maximum iteration number of the electric field 
GMRES solver. The default values are shown above. 
</command>

<command name="DISCRETIZATION">
  <parameter name="theta" type="real" default="0.51"/>
  <parameter name="ratioDivC2C" type="real" default="0.1" />

#DISCRETIZATION
0.51                        theta
0.1                         ratioDivC2C

The electric field is calculated at the time $t_{n+\theta}$. When $\theta$ 
is 0.5, the total energy is conserved if ratioDivC2C is 0. However, 
the exact energy conservation may produce artifical oscillations. 
0.51-0.6 are typical values of $\theta$.

'ratioDivC2C' is the ratio of div(E) calculated from extended stencil
discretization. It helps to suppress short-wavelength oscillations. 
Default values are shown.
</command>

<command name="DIVE">
  <parameter name="doCorrectDivE" type="logical" default="T"/>
  
#DIVE
T                         doCorrectDivE

Turning on/off the accurate div(E) cleaning, which corrects the particle
locations to satisfy Gauss's law: div(E) = net_charge. 
Default is true as it is required for accuracy of long simulations.
</command>

<command name="TIMESTEPPING" required="T">
  <parameter name="dt" type="real"/>

#TIMESTEPPING
0.1                dt

So far, only fixed time step is supported. There is no default value,
so this command is required.
</command>

<command name="ELECTRON" alias="ELECTRON_FLEKS0,ELECTRON_FLEKS1,ELECTRON_FLEKS2"
	 multiple="T">
  <parameter name="ElectronChargePerMass" type="real" default='-100'/>

#ELECTRON
-100                     ElectronChargePerMass

#ELECTRON_FLEKS1
-25                      ElectronChargePerMass for FLEKS region 1

This command sets the charge per mass in normalized unit for electrons.
If the _FLEKSX is added, it sets the value for the X FLEKS region.
It is ignored when FLEKS is coupled with BATSRUS configured with the 
five-moment or six-moment fluid closures that define the electron mass.

Default value is shown.
</command>

<command name="PARTICLES" alias="PARTICLES_FLEKS0,PARTICLES_FLEKS1,PARTICLES_FLEKS2"
	 multiple="T">
    <parameter name="nParticleX"  type="integer" min="1"/>
    <parameter name="nParticleY"  type="integer" min="1"/>
    <parameter name="nParticleZ"  type="integer" min="1"/>

#PARTICLES_FLEKS0
5                  Particles per cell in X 
6	           Particles per cell in Y 
1	           Particles per cell in Z 

The command sets particle numbers in each direction for initial
condition and ghost cells for a FLEKS region.
</command>

</commandList>
